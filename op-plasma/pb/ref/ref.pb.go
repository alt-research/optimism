// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.4
// source: ref.proto

package ref

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Calldata wraps the raw data or the data ref in da
type Ref struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*Ref_Raw
	//	*Ref_Eigenda
	//	*Ref_Digest
	//	*Ref_Celestia
	//	*Ref_Avail
	Value isRef_Value `protobuf_oneof:"value"`
}

func (x *Ref) Reset() {
	*x = Ref{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ref_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref) ProtoMessage() {}

func (x *Ref) ProtoReflect() protoreflect.Message {
	mi := &file_ref_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref.ProtoReflect.Descriptor instead.
func (*Ref) Descriptor() ([]byte, []int) {
	return file_ref_proto_rawDescGZIP(), []int{0}
}

func (m *Ref) GetValue() isRef_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Ref) GetRaw() []byte {
	if x, ok := x.GetValue().(*Ref_Raw); ok {
		return x.Raw
	}
	return nil
}

func (x *Ref) GetEigenda() *EigenDA {
	if x, ok := x.GetValue().(*Ref_Eigenda); ok {
		return x.Eigenda
	}
	return nil
}

func (x *Ref) GetDigest() *Digest {
	if x, ok := x.GetValue().(*Ref_Digest); ok {
		return x.Digest
	}
	return nil
}

func (x *Ref) GetCelestia() *Celestia {
	if x, ok := x.GetValue().(*Ref_Celestia); ok {
		return x.Celestia
	}
	return nil
}

func (x *Ref) GetAvail() *Avail {
	if x, ok := x.GetValue().(*Ref_Avail); ok {
		return x.Avail
	}
	return nil
}

type isRef_Value interface {
	isRef_Value()
}

type Ref_Raw struct {
	Raw []byte `protobuf:"bytes,1,opt,name=raw,proto3,oneof"`
}

type Ref_Eigenda struct {
	Eigenda *EigenDA `protobuf:"bytes,2,opt,name=eigenda,proto3,oneof"`
}

type Ref_Digest struct {
	Digest *Digest `protobuf:"bytes,3,opt,name=Digest,proto3,oneof"`
}

type Ref_Celestia struct {
	Celestia *Celestia `protobuf:"bytes,4,opt,name=celestia,proto3,oneof"`
}

type Ref_Avail struct {
	Avail *Avail `protobuf:"bytes,5,opt,name=avail,proto3,oneof"`
}

func (*Ref_Raw) isRef_Value() {}

func (*Ref_Eigenda) isRef_Value() {}

func (*Ref_Digest) isRef_Value() {}

func (*Ref_Celestia) isRef_Value() {}

func (*Ref_Avail) isRef_Value() {}

type EigenDA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchHeaderHash []byte `protobuf:"bytes,1,opt,name=batch_header_hash,json=batchHeaderHash,proto3" json:"batch_header_hash,omitempty"`
	BlobIndex       uint32 `protobuf:"varint,2,opt,name=blob_index,json=blobIndex,proto3" json:"blob_index,omitempty"`
}

func (x *EigenDA) Reset() {
	*x = EigenDA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ref_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EigenDA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EigenDA) ProtoMessage() {}

func (x *EigenDA) ProtoReflect() protoreflect.Message {
	mi := &file_ref_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EigenDA.ProtoReflect.Descriptor instead.
func (*EigenDA) Descriptor() ([]byte, []int) {
	return file_ref_proto_rawDescGZIP(), []int{1}
}

func (x *EigenDA) GetBatchHeaderHash() []byte {
	if x != nil {
		return x.BatchHeaderHash
	}
	return nil
}

func (x *EigenDA) GetBlobIndex() uint32 {
	if x != nil {
		return x.BlobIndex
	}
	return 0
}

type Celestia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Celestia) Reset() {
	*x = Celestia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ref_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Celestia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Celestia) ProtoMessage() {}

func (x *Celestia) ProtoReflect() protoreflect.Message {
	mi := &file_ref_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Celestia.ProtoReflect.Descriptor instead.
func (*Celestia) Descriptor() ([]byte, []int) {
	return file_ref_proto_rawDescGZIP(), []int{2}
}

func (x *Celestia) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type Avail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHash string `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	Sender    string `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Nonce     int64  `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *Avail) Reset() {
	*x = Avail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ref_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Avail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Avail) ProtoMessage() {}

func (x *Avail) ProtoReflect() protoreflect.Message {
	mi := &file_ref_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Avail.ProtoReflect.Descriptor instead.
func (*Avail) Descriptor() ([]byte, []int) {
	return file_ref_proto_rawDescGZIP(), []int{3}
}

func (x *Avail) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *Avail) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *Avail) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

type Digest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *Digest) Reset() {
	*x = Digest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ref_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Digest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Digest) ProtoMessage() {}

func (x *Digest) ProtoReflect() protoreflect.Message {
	mi := &file_ref_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Digest.ProtoReflect.Descriptor instead.
func (*Digest) Descriptor() ([]byte, []int) {
	return file_ref_proto_rawDescGZIP(), []int{4}
}

func (x *Digest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_ref_proto protoreflect.FileDescriptor

var file_ref_proto_rawDesc = []byte{
	0x0a, 0x09, 0x72, 0x65, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x65, 0x66,
	0x22, 0xc4, 0x01, 0x0a, 0x03, 0x52, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12, 0x28, 0x0a, 0x07,
	0x65, 0x69, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x72, 0x65, 0x66, 0x2e, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x44, 0x41, 0x48, 0x00, 0x52, 0x07, 0x65,
	0x69, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x12, 0x25, 0x0a, 0x06, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x72, 0x65, 0x66, 0x2e, 0x44, 0x69, 0x67,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a,
	0x08, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x72, 0x65, 0x66, 0x2e, 0x43, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x48, 0x00,
	0x52, 0x08, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x12, 0x22, 0x0a, 0x05, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x72, 0x65, 0x66, 0x2e,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x42, 0x07,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x54, 0x0a, 0x07, 0x45, 0x69, 0x67, 0x65, 0x6e,
	0x44, 0x41, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x1a, 0x0a,
	0x08, 0x43, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x54, 0x0a, 0x05, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22,
	0x22, 0x0a, 0x06, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x42, 0x08, 0x5a, 0x06, 0x70, 0x62, 0x2f, 0x72, 0x65, 0x66, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ref_proto_rawDescOnce sync.Once
	file_ref_proto_rawDescData = file_ref_proto_rawDesc
)

func file_ref_proto_rawDescGZIP() []byte {
	file_ref_proto_rawDescOnce.Do(func() {
		file_ref_proto_rawDescData = protoimpl.X.CompressGZIP(file_ref_proto_rawDescData)
	})
	return file_ref_proto_rawDescData
}

var file_ref_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_ref_proto_goTypes = []interface{}{
	(*Ref)(nil),      // 0: ref.Ref
	(*EigenDA)(nil),  // 1: ref.EigenDA
	(*Celestia)(nil), // 2: ref.Celestia
	(*Avail)(nil),    // 3: ref.Avail
	(*Digest)(nil),   // 4: ref.Digest
}
var file_ref_proto_depIdxs = []int32{
	1, // 0: ref.Ref.eigenda:type_name -> ref.EigenDA
	4, // 1: ref.Ref.Digest:type_name -> ref.Digest
	2, // 2: ref.Ref.celestia:type_name -> ref.Celestia
	3, // 3: ref.Ref.avail:type_name -> ref.Avail
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_ref_proto_init() }
func file_ref_proto_init() {
	if File_ref_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ref_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ref_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EigenDA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ref_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Celestia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ref_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Avail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ref_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Digest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ref_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Ref_Raw)(nil),
		(*Ref_Eigenda)(nil),
		(*Ref_Digest)(nil),
		(*Ref_Celestia)(nil),
		(*Ref_Avail)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ref_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ref_proto_goTypes,
		DependencyIndexes: file_ref_proto_depIdxs,
		MessageInfos:      file_ref_proto_msgTypes,
	}.Build()
	File_ref_proto = out.File
	file_ref_proto_rawDesc = nil
	file_ref_proto_goTypes = nil
	file_ref_proto_depIdxs = nil
}
