name: Build OP Stack
on:
  push:
    tags: ["*"]
  workflow_dispatch:

jobs:
  docker-op-stack-go:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     include:
    #       - name: build and push op-stack-go
    #         image: op-stack-go
    #         dockerfile: ops/docker/op-stack-go/Dockerfile
    #         context: .
    #         buildargs: '--build-arg BUILDPLATFORM=linux/amd64 --build-arg TARGETOS=linux --build-arg TARGETARCH=amd64'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Prepare Environment Variables
        run: |
          echo "HOME=$HOME" | tee -a $GITHUB_ENV
          echo "SHORT_SHA=${GITHUB_SHA::7}" | tee -a $GITHUB_ENV
          GIT_TAG=$(git tag --points-at HEAD)
          echo "GIT_TAG=$GIT_TAG" | tee -a $GITHUB_ENV
          GIT_BRANCH=$(git branch --show-current)
          echo "GIT_BRANCH=$GIT_BRANCH" | tee -a $GITHUB_ENV
          echo "REF_NAME=$(echo ${GIT_TAG:-$GITHUB_REF_NAME} | sed 's/[^a-zA-Z0-9._]/-/g')" | tee -a $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ECR_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: ${{ matrix.name }}
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.context }}
          push: true
          tags: |
            ${{ secrets.ECR_REGISTRY }}/${{ matrix.image }}:latest
            ${{ secrets.ECR_REGISTRY }}/${{ matrix.image }}:${{ env.SHORT_SHA }}
            ${{ secrets.ECR_REGISTRY }}/${{ matrix.image }}:${{ env.REF_NAME }}
          file: ${{ matrix.dockerfile }}
          provenance: false

  docker:
    runs-on: ubuntu-latest
    needs: docker-op-stack-go
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Prepare Environment Variables
        run: |
          echo "HOME=$HOME" | tee -a $GITHUB_ENV
          echo "SHORT_SHA=${GITHUB_SHA::7}" | tee -a $GITHUB_ENV
          GIT_TAG=$(git tag --points-at HEAD)
          echo "GIT_TAG=$GIT_TAG" | tee -a $GITHUB_ENV
          GIT_BRANCH=$(git branch --show-current)
          echo "GIT_BRANCH=$GIT_BRANCH" | tee -a $GITHUB_ENV
          echo "REF_NAME=$(echo ${GIT_TAG:-$GITHUB_REF_NAME} | sed 's/[^a-zA-Z0-9._]/-/g')" | tee -a $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ECR_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # - name: build and push geth
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: ./ops-bedrock
      #     push: true
      #     tags: |
      #       ${{ secrets.ECR_REGISTRY }}/optimism-geth:latest
      #       ${{ secrets.ECR_REGISTRY }}/optimism-geth:${{ env.SHORT_SHA }}
      #       ${{ secrets.ECR_REGISTRY }}/optimism-geth:${{ env.REF_NAME }}
      #     file: ops-bedrock/Dockerfile.l2
      #     provenance: false
      #     build-args: |
      #       BUILDPLATFORM=linux/amd64
      #       TARGETOS=linux
      #       TARGETARCH=amd64

      - name: build and push op-node
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          file: docker-bake.hcl
          provenance: false
          set: |
            *.platform=linux/amd64,linux/arm64
            *.args.GIT_COMMIT=${{ github.sha }}
            *.args.GIT_DATE=$(git log -1 --format=%cd)
            *.tags=${{ secrets.ECR_REGISTRY }}/optimism-node:latest
            *.tags=${{ secrets.ECR_REGISTRY }}/optimism-node:${{ env.SHORT_SHA }}
            *.tags=${{ secrets.ECR_REGISTRY }}/optimism-node:${{ env.REF_NAME }}

      # - name: build and push op-proposer
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     push: true
      #     tags: |
      #       ${{ secrets.ECR_REGISTRY }}/optimism-proposer:latest
      #       ${{ secrets.ECR_REGISTRY }}/optimism-proposer:${{ env.SHORT_SHA }}
      #       ${{ secrets.ECR_REGISTRY }}/optimism-proposer:${{ env.REF_NAME }}
      #     file: op-proposer/Dockerfile
      #     provenance: false
      #     build-args: |
      #       BUILDPLATFORM=linux/amd64
      #       TARGETOS=linux
      #       TARGETARCH=amd64
      #       OP_STACK_GO_BUILDER=${{ secrets.ECR_REGISTRY }}/op-stack-go:latest

      # - name: build and push op-batcher
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     push: true
      #     tags: |
      #       ${{ secrets.ECR_REGISTRY }}/optimism-batcher:latest
      #       ${{ secrets.ECR_REGISTRY }}/optimism-batcher:${{ env.SHORT_SHA }}
      #       ${{ secrets.ECR_REGISTRY }}/optimism-batcher:${{ env.REF_NAME }}
      #     file: op-batcher/Dockerfile
      #     provenance: false
      #     build-args: |
      #       BUILDPLATFORM=linux/amd64
      #       TARGETOS=linux
      #       TARGETARCH=amd64
      #       OP_STACK_GO_BUILDER=${{ secrets.ECR_REGISTRY }}/op-stack-go:latest